#include <LiquidCrystal.h>
#include "DHT.h"

#define DHT13_PIN 13 // zmiana z p2
#define laser_pulse 10 
#define out A1

#define mikro 1000000
#define k 1
#define skala_volty 1
#define RPM 3300
#define time_shift 1050
#define phase_shift 2.85

DHT dht;
LiquidCrystal lcd(2, 3, 4, 5, 6, 7);

float vv;
float vv_base = 0;
int c = 1; // c = 0
float t = 0; 
float ct; // time baseline
int Rh = 0;
int T = 0;
int ts = 1000; // time scale

unsigned long t0 = 1; // czas t0 strzału
unsigned long tk = 1;
unsigned long t0s = 0;




float reflectometry(){
  return analogRead(out) - vv_base;
}

void time_read (){
  t = millis();
}

float volts(float vvs){                         // returns volts intead of points
    return 5 * (vvs / c) / 1023;                    // - vv_base
}

void serial_print(){
    Serial.print((t - ct)/ts,3);
        Serial.print(";");
        Serial.println(skala_volty * volts(vv),3);
  }
  

void hum(){
       Rh = dht.getHumidity();
       T = dht.getTemperature();
}

void show(){
    lcd.setCursor(0,0);
    lcd.print("Humidity:");
    lcd.setCursor(0,1);
    lcd.print(Rh+3);
    lcd.print("%RH ; ");
    lcd.print(T);
    lcd.print("*C"); 
}

float RPM_phase(int RPMs){
   return RPMs / 60;                        //  2700/60=45Hz
}

float phase_conv(float tks){ // faza [Hz]
    if(tks > 0) {return mikro / tks;}
    else{ return mikro / ( tks + 1 );}
}

void shoot(){
    t0 = micros();
    c = 0;
    vv = 0;
      digitalWrite(laser_pulse,HIGH);
      do{  
            c = c + 1;
               vv = vv + reflectometry();   
            delayMicroseconds(5);        
        }while(c <= 3); //świeć przez x mikrosekund */
    digitalWrite(laser_pulse,LOW);
    
}

void laser_mod(){ 
    if(phase_conv((tk + time_shift) / k) + phase_shift <= RPM_phase(RPM)){
         shoot();
         serial_print();
         tk = 1;       
    }  
}


void setup() {

  Serial.begin(115200);
  lcd.begin(16,2);
  delay(1000);
  lcd.clear();
  dht.setup(DHT13_PIN); 
  pinMode(10, OUTPUT); 
  ct = millis();
  tk = mikro / (int)RPM_phase(RPM);
  delay(250);
  vv_base = reflectometry();
  delay(250);
  show();
}

void loop() {
      time_read();
        laser_mod();
                                     /*digitalWrite(laser_pulse,HIGH);
                                      vv = reflectometry();*/

    

 //if(volts(vv) < 3){
  //    hum();
   //   if (dht.getStatusString() == "OK") {
   //       show();
    //  }
 //  }
  
      tk = micros() - t0; // zerowanie tk    
}
